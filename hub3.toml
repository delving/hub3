# The default orgId (deprecated)
orgId = "hub3"
# the default hub3 clusterID
hub3ID = "hub3"
# the url to the remote dataNode. When emtpy the current node is started in dataNode mode
dataNodeURL = ""

[org.dcn]
domains = ["localhost:3000"]
default = true

[org.hub3]
domains = ["localhost:3001"]
customID = "hub3"
default = true

[http]
# all the configuration for the http sub-command
# The port of the http server
port = 3001
# The port of the metrics server
metricsPort = 6060
# certfile = "certs/cert.pem"
# keyFile = "certs/key.pem"

[nats]
enabled = true
clusterID = "hub3-nats"
clientID = "hub3-pub"
durableName = "hub3-worker"
durableQueue = "hub3-queue"
subjectID = "hub3-bulk-index"
url = "nats://localhost:4222"


[db]
type = "sqlite3"
connect = "/tmp/hub3.db"

[ElasticSearch]
# enable the elasticsearch search api
enabled = true 
# don't run internal bulk indexer. Remote process reads the index queue
useRemoteIndexer = false
# collect client metrics
metrics = true
# the urls where we can find elasticsearch
urls = ["http://localhost:9200"]
# the name of the index. If empty it is the name of the OrgId
indexName = "hub3"
# if non-empty digital objects will be indexed in a dedicated v2 index
digitalObjectSuffix = "scans"
# if _mapping and _search proxies should be enabled
proxy = true 
# Store fragments 
fragments = false
# index in V1 mode (will disable fragments and v2 style indexing)
indexV1 = false
# Enable trace logging of ElasticSearch 
enableTrace = false
# Enable info logging of ElasticSearch
enableInfo = true
# key to use for searching and deleting spec (spec.raw for v5 style index)
# For v2 style indexing using meta.spec
specKey = "meta.spec"
# key to use to find revisions. For v1 style indexes use 'revision'
# for v2 style indexing use 'meta.revision'
revisionKey = "meta.revision"
# Key to use for finding the tentant or orgID key. Default meta.orgID
orgIDKey = "meta.orgID"
# username and password for xpack security
userName = ""
password = ""
# configuration for MimimumShouldMatch
minimumShouldMatch = "2<70%"
# number of workers for indexing. Default 1
workers = 2
# use searchAfter API, see https://www.elastic.co/guide/en/elasticsearch/reference/6.8/search-request-search-after.html
# this is only applied to the v2 search API endpoint
enableSearchAfter = false
# shard configuration for rdf and fragments index
shards = 1
# replicas configuration for rdf and fragments index
replicas = 0
# indexTypes enabled types for the bulk index service
indexTypes = ["v2"]
# maxTreeSize is the maximum size of the number of nodes in the tree navigation API
maxTreeSize = 251
# orphanWait is the time in seconds that the goroutine waits for the cluster to be in sync before sending delete query
orphanWait = 15


[[posthooks]]
name = "ginger"
# specs to exclude from posthook
excludeSpec = [
    "mip",
]
orgID = ""
# target URLS for JSON-LD post
url = ''
apikey = ''


[logging]
devmode = true
sentrydsn = ""
level = "debug"
withCaller = true
consoleLogger = true

[rdf]
# Enable storing of the RDF records in the triple store specified in sparqlUpdatePath (default: false)
rdfStoreEnabled = false
# the fully qualified URL including the port
sparqlHost = "http://localhost:3030"
# the path to the SPARQL endpoint. A '%s' can be inserted in the path to be replaced with the orgId.
#sparqlPath = "/bigdata/namespace/%s/sparql"
sparqlPath = "/%s/sparql"
# sparqlUpdate path is the path to the write endpoint. A '%s' can be inserted in the path to be replaced with the orgId.
sparqlUpdatePath = "/%s/update"
# dataPath is the path to the GraphStore Protocol endpoint
dataPath = "/%s/data"
# A list of RDF entry points. 
routedEntryPoints = ["http://localhost:3000"]
# The base url used for minting RDF URI's
baseUrl = "http://data.hub3.org"
# Enable the sparql endpoint proxy (Read-Only)
sparqlEnabled = true 
# Default format for importing in the bulk API, "text/turtle", "application/rdf+xml" or "application/ld+json"
defaultFormat = "application/ld+json" 
# which meta-tags should be inserted into the triple store
rdfStoreTags = ["narthex", "mdr"]

[oaipmh]
# options: no, transient, persistent
deletedRecords = "persistent"
# enable the oai-pmh endpoint at /api/oai-pmh
enabled = true
# admin emails
adminEmails = ["info@delving.eu",]
# repositoryName
repositoryName = "dev1"
harvestDelay = 1
eadHarvestUrl = "http://localhost:3000/oai/ead"
metsHarvestUrl = "http://localhost:3000/oai/mets"
harvestPath = "/tmp/oaipmh"

[webresource]
# enabel the webresource endpoint /api/webresource
enabled = true
# webresource source dir
sourceDir = "/tmp/webresource"
# webresource cache dir
cacheDir = "/tmp/webresource_cache"
# path to vips binary. When not found deepzoom is disabled
vipsBin = "/usr/bin/vips"
# host of the media manager
mediaManagerHost = "http://media.delving.org"
# resolve remote resources
resolveRemoteWebResources = true

[imageproxy]
# enable the image proxy at /api/imageproxy
enabled = true
# cache dir (tiered approach with memory first)
# if empty it will be sourceDir + 'cache'
cacheDir = "/tmp/imageproxy"
# maxSizeCacheDir is rearched the oldest entries will be removed (MB)
maxSizeCacheDir = 1024
# a list of allowed referrers. If empty everything is allowed
referrer = []
# a list of allowed remote hosts. If empty everything is allowed
# allowList = ["service.archief.nl", "service.test.archief.nl", "service.acpt.archief.nl"]
# a list of refused patterns in cachable urls
refuseList = []
# lruCacheSize 
lruCacheSize = 1000
# image can be resized; requires libvips to be installed
enableResize = true
# time limit for request served by this proxy. 0 is no timeout
timeout = 15
# path where to mount the imageproxy. default: "imageproxy".
proxyPrefix = "imageproxy"

[cache]
# Lifetime of objects in the cache in minutes
lifeWindowMinutes = 10
# Enable HTTP cache
enabled = false
# APIPrefix to be used for caching. 
apiPrefix = "/api/cache/http"
# strip prefix determines if cache prefix should be included in the proxy request
stripPrefix = true
# default domain to reroute the caching request to
cacheDomain = "prod.nationaalarchief.nl"
# max size for the in memory cache in MB. So 8192 for 8GB.
hardMaxCacheSize = 1024
# max size an individual entry in bytes, i.e. 102400 is 10MB
maxEntrySize = 30720

[lod]
# enable the lod routing point
enabled = true
## resource routing point
resource = "resource"
# html routing point
html = "page"
# rdf data routing point
rdf = "data"
# One the above three routes need to be handled from the same endpoint
# When content is not "", it will override the other endpoints
# You can use regural expressions for the first element of the relative
# path, e.g. 'NL-.*'.
singleEndpoint = "NL-.*"

# Default namespaces can be found in config/namespace.go

[ead]
cacheDir = "/tmp/ead"
metrics = true
workers = 1
processDigital = true

searchURL = ""
genreFormDefault = "other/unknown"
treeFields = [
    # did
    "ead-rdf_unitTitle",
    "ead-rdf_unitID",
    "ead-rdf_unitDate",
    "ead-rdf_physdesc",
    "ead-rdf_physdescExtent",
    "ead-rdf_physdescDimension",
    "ead-rdf_physdescPhysfacet",
    "ead-rdf_physloc",
    "ead-rdf_materialspec",
    "ead-rdf_origination",
    "ead-rdf_abstract",
    "ead-rdf_langmaterial",
    "ead-rdf_dao",
    # clevel
    "ead-rdf_accessrestrict",
    "ead-rdf_controlaccess",
    "ead-rdf_odd",
    "ead-rdf_scopecontent",
    "ead-rdf_phystech",
    "ead-rdf_custodhist",
    "ead-rdf_altformavail",
    "ead-rdf_acqinfo",
    "ead-rdf_userestrict",
    "ead-rdf_accruals",
    "ead-rdf_appraisal",
    "ead-rdf_bioghist",
    "ead-rdf_relatedmaterial",
    "ead-rdf_arrangement",
    "ead-rdf_separatedmaterial",
    "ead-rdf_processinfo",
    "ead-rdf_otherfindaid",
    "ead-rdf_originalsloc",
    "ead-rdf_fileplan",
    "ead-rdf_descgrp",
    # should be removed
    "ead-rdf_genreform",
]
# searchFields with optional boost. Only tree fields can be selected here.
searchFields = [
    "tree.title^6.0",
    "tree.inventoryID^3.0",
    "tree.label^2.0",
    "tree.agencyCode^1.5",
    "tree.unitID^1.5",
    "tree.description^1.0",
    "tree.rawContent",
]


[rdftag]
# used for title of a resource
title = [
    "http://purl.org/dc/elements/1.1/title",
    "https://archief.nl/def/ead/idUnittitle",
]
label = [
    "http://purl.org/dc/elements/1.1/title",
    "http://www.w3.org/2004/02/skos/core#prefLabel",
    "http://www.w3.org/2000/01/rdf-schema#label",
    "http://www.w3.org/2004/02/skos/core#altLabel",
    "http://xmlns.com/foaf/0.1/name",
    "http://www.geonames.org/ontology#name",
    "http://schemas.delving.eu/narthex/terms/proxyLiteralValue",
    "http://dbpedia.org/ontology/name",
]

thumbnail = [
    "http://xmlns.com/foaf/0.1/depiction",
    "https://archief.nl/def/thumbnail",
    "http://schemas.delving.eu/nave/terms/thumbnail",
    "http://schemas.delving.eu/nave/terms/thumbSmall",
    "http://schemas.delving.eu/nave/terms/thumbLarge",
    "http://www.europeana.eu/schemas/edm/object",
    "http://www.europeana.eu/schemas/edm/isShownBy",
]


owner = [
    "http://www.europeana.eu/schemas/edm/dataProvider",
]
landingPage = [
    "http://www.europeana.eu/schemas/edm/isShownAt",
]
description = [
    "http://purl.org/dc/elements/1.1/description",
]
subject = [
    "http://purl.org/dc/elements/1.1/subject",
]
date = [
    #"http://purl.org/dc/elements/1.1/date",
]
collection = [
    "http://schemas.delving.eu/nave/terms/collection",
]
subCollection = [
    "http://schemas.delving.eu/nave/terms/collectionPart",
]
objectType = [
    "http://schemas.delving.eu/nave/terms/objectType",
    "http://schemas.delving.eu/nave/terms/objectSoort",
]
objectID = [
    "http://schemas.delving.eu/nave/terms/objectNumber",
    "http://schemas.delving.eu/nave/terms/objectNummer",
    "http://purl.org/dc/elements/1.1/identifier",
    "https://archief.nl/def/ead/idInventorynr",
]
creator = [
    "http://purl.org/dc/elements/1.1/creator",
]

# The following tags trigger special indexing functionality
# when they are invalid it could result in the records being dropped
# during indexing
latLong = [
    "http://schemas.delving.eu/nave/terms/latLong",
    "http://schemas.delving.eu/nave/terms/GeoHash",
    "http://schemas.delving.eu/nave/terms/geoHash",
]
dateRange = [
    "https://archief.nl/def/ead/dateNormal",
    "https://archief.nl/def/ead/periodDesc",
]
isoDate = [
    "https://archief.nl/def/ead/dateiso",
    #"http://schemas.delving.eu/nave/terms/date",
]

[[namespaces]]
base = "http://www.musip.nl/"
prefix = "musip"

[[namespaces]]
base = "http://schemas.delving.eu/aff/"
prefix = "aff"

[[namespaces]]
prefix="bf" 
base = "http://id.loc.gov/ontologies/bibframe/"

[[namespaces]]
prefix="nt-rdf"
base = "https://archief.nl/def/nt/"

[[namespaces]]
prefix="cs" 
base = "http://www.kulttuurisampo.fi/ebkr/"

[[namespaces]]
prefix="dc" 
base = "http://purl.org/dc/elements/1.1/"

[[namespaces]]
prefix="geo" 
base = "http://www.opengis.net/ont/geosparql#"

[[namespaces]]
prefix="hg" 
base = "http://rdf.histograph.io/"

[[namespaces]]
prefix="sd" 
base = "http://www.w3.org/ns/sparql-service-description#"

[[namespaces]]
prefix="vs" 
base = "http://www.w3.org/2003/06/sw-vocab-status/ns#"

[[namespaces]]
prefix="bgn" 
base = "http://biographynet.nl/schema/"

[[namespaces]]
prefix="dbo" 
base = "http://dbpedia.org/ontology/"

[[namespaces]]
prefix="edm" 
base = "http://www.europeana.eu/schemas/edm/"

[[namespaces]]
prefix="naa" 
base = "https://archief.nl/def/"

[[namespaces]]
prefix="ore" 
base = "http://www.openarchives.org/ore/terms/"

[[namespaces]]
prefix="org" 
base = "http://www.w3.org/ns/org#"

[[namespaces]]
prefix="owl" 
base = "http://www.w3.org/2002/07/owl#"

[[namespaces]]
prefix="rdf" 
base = "http://www.w3.org/1999/02/22-rdf-syntax-ns#"

[[namespaces]]
prefix="sem" 
base = "http://semanticweb.cs.vu.nl/2009/11/sem/"

[[namespaces]]
prefix="xml" 
base = "http://www.w3.org/XML/1998/namespace"

[[namespaces]]
prefix="xsd" 
base = "http://www.w3.org/2001/XMLSchema#"

[[namespaces]]
prefix="dcat" 
base = "http://www.w3.org/ns/dcat#"

[[namespaces]]
prefix="foaf" 
base = "http://xmlns.com/foaf/0.1/"

[[namespaces]]
prefix="iiif" 
base = "http://iiif.io/api/image/2#"

[[namespaces]]
prefix="prov" 
base = "http://www.w3.org/ns/prov#"

[[namespaces]]
prefix="rdfs" 
base = "http://www.w3.org/2000/01/rdf-schema#"

[[namespaces]]
prefix="skos" 
base = "http://www.w3.org/2004/02/skos/core#"

[[namespaces]]
prefix="svcs" 
base = "http://rdfs.org/sioc/services#"

[[namespaces]]
prefix="void" 
base = "http://rdfs.org/ns/void#"

[[namespaces]]
prefix="vcard" 
base = "http://www.w3.org/2006/vcard/ns#"

[[namespaces]]
prefix="frbroo" 
base = "http://iflastandards.info/ns/fr/frbr/frbroo/"

[[namespaces]]
prefix="premis" 
base = "http://www.loc.gov/premis/rdf/v3/"

[[namespaces]]
prefix="schema" 
base = "http://schema.org/"

[[namespaces]]
prefix="dcterms" 
base = "http://purl.org/dc/terms/"

[[namespaces]]
prefix="eac-cpf" 
base = "http://www3.iath.virginia.edu/eac/cpf/"

[[namespaces]]
prefix="ebucore" 
base = "http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#"

[[namespaces]]
prefix="cidoc-crm" 
base = "http://www.cidoc-crm.org/cidoc-crm/"

[[namespaces]]
prefix="frbr_core" 
base = "http://purl.org/vocab/frbr/core#"

[[namespaces]]
prefix="odrl" 
base = "http://www.w3.org/ns/odrl/2/"

[TimeRevisionStore]
enabled = true
dataPath = "/tmp/trs"

[NDE]
enabled = true
name = "Linked Data van het NA"
description = "Alle linked data zoals beschikbaar gesteld door het Nationaal Archief."
defaultLanguages = ["nl"]
defaultLicense = "http://creativecommons.org/publicdomain/zero/1.0/"
datasetFmt = "%s/onderzoeken/archief/%s/"

[NDE.publisher]
name = "Nationaal Archief"
altName = "NA"
url = "https://www.nationaalarchief.nl"

[[NDE.distribution]]
datasetType = "ead"
mimeType = "application/pdf"
downloadFmt = "%s/onderzoeken/archief/%s/download/pdf"

[[NDE.distribution]]
datasetType = "ead"
mimeType = "application/xml"
downloadFmt = "%s/onderzoeken/archief/%s/download/xml"
