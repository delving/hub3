# The default orgId
orgId = "rapid"

[http]
# all the configuration for the http sub-command
# The port of the http server
port = 3001

[ElasticSearch]
# enable the elasticsearch search api
enabled = true 
# the urls where we can find elasticsearch
urls = ["http://localhost:9200"]
# the name of the index. If empty it is the name of the OrgId
indexName = "rapid"
# if _mapping and _search proxies should be enabled
proxy = true 
# Store fragments 
fragments = true
# index in V1 mode (will disable fragments and v2 style indexing)
indexV1 = false
# Enable trace logging of elasticsearch
enableTrace = false
# key to use for searching and deleting spec (spec.raw for v5 style index)
# For v2 style indexing using meta.spec
specKey = "meta.spec"
# username and password for packx security
userName = ""
password = ""

[posthook]
# specs to exclude from posthook
excludeSpec = [    
    "brabant-blogs",
    "geschiedenis",
    "in-brabant",
    "personen",
    "textielmuseum-bibliotheek",
    "weverij-de-ploeg",
]
# target URLS for JSON-LD post
# urls = [ 'https://www.brabantserfgoed.nl/api/erfgoedbrabant/brabantcloud']

[logging]
devmode = true
sentrydsn = ""

[rdf]
# the fully qualified URL including the port
sparqlHost = "http://localhost:3030"
# the path to the SPARQL endpoint. A '%s' can be inserted in the path to be replaced with the orgId.
#sparqlPath = "/bigdata/namespace/%s/sparql"
sparqlPath = "/%s/sparql"
# sparqlUpdate path is the path to the write endpoint. A '%s' can be inserted in the path to be replaced with the orgId.
sparqlUpdatePath = "/%s/update"
# dataPath is the path to the GraphStore Protocol endpoint
dataPath = "/%s/data"
# A list of RDF entry points. 
routedEntryPoints = ["http://localhost:3000"]
# The base url used for minting RDF URI's
baseUrl = "http://data.rapid.org"
# Enable the sparql endpoint proxy (Read-Only)
sparqlEnabled = true 
# Enable storing of the RDF records in the triple store specified in sparqlUpdatePath (default: false)
rdfStoreEnabled = false
# Default format for importing in the bulk API, "text/turtle" or "application/ld+json"
defaultFormat = "application/ld+json" 
#defaultFormat = "text/turtle" 

[oaipmh]
# options: no, transient, persistent
deletedRecords = "persistent"
# enable the oai-pmh endpoint at /api/oai-pmh
enabled = true
# admin emails
adminEmails = ["info@delving.eu",]
# repositoryName
repositoryName = "dev1"

[webresource]
# enabel the webresource endpoint /api/webresource
enabled = true
# webresource source dir
sourceDir = "/tmp/webresource"
# webresource cache dir
cacheDir = "/tmp/webresource_cache"
# path to vips binary. When not found deepzoom is disabled
vipsBin = "/usr/bin/vips"
# host of the media manager
mediaManagerHost = "http://media.delving.org"

[imageproxy]
# enable the image proxy at /api/imageproxy
enabled = true
# cache dir (tiered approach with memory first)
# if empty it will be sourceDir + 'cache'
cacheDir = "/tmp/imageproxy"
# a list of allowed referrers. If empty everything is allowed
referrer = []

# a list of allowed remote hosts. If empty everything is allowed
whitelist = []
# allow images to scale beyond their original dimensions
scaleUp = false
# time limit for request served by this proxy. 0 is no timeout
timeout = 10
# enable deepzoom of images
deepzoom = true
# path where to mount the imageproxy. default: "imageproxy".
proxyPrefix = "imageproxy"

[cache]
# Enable HTTP cache
enabled = true
# Lifetime of objects in the cache in minutes
lifeWindowMinutes = 10
# APIPrefix to be used for caching. 
apiPrefix = "/api/cache/http"
# strip prefix determines if cache prefix should be included in the proxy request
stripPrefix = true
# domain to reroute the caching request to
cacheDomain = "acpt.nationaalarchief.nl"
# max size for the in memory cache in MB. So 8192 for 8GB.
hardMaxCacheSize = 512

[lod]
# enable the lod routing point
enabled = true
## resource routing point
resource = "resource"
# html routing point
html = "page"
# rdf data routing point
rdf = "data"
# One the above three routes need to be handled from the same endpoint
# When content is not "", it will override the other endpoints
# You can use regural expressions for the first element of the relative
# path, e.g. 'NL-.*'.
#singleEndpoint = "NL-.*"

# Default namespaces can be found in config/namespace.go

[[namespaces]]
base = "http://www.musip.nl/"
prefix = "musip"

[[namespaces]]
base = "http://schemas.delving.eu/aff/"
prefix = "aff"


[rdftag]
label = [
    "http://www.w3.org/2004/02/skos/core#preflabel",
    "http://www.w3.org/2000/01/rdf-schema#label",
    "http://www.w3.org/2004/02/skos/core#altLabel",
    "http://xmlns.com/foaf/0.1/name",
    "http://www.geonames.org/ontology#name",
    "http://purl.org/dc/elements/1.1/title",
    "http://schemas.delving.eu/narthex/terms/proxyLiteralValue",
    "http://dbpedia.org/ontology/name",
]

thumbnail = [
    "http://xmlns.com/foaf/0.1/depiction",
    "http://schemas.delving.eu/nave/terms/thumbnail",
    "http://schemas.delving.eu/nave/terms/thumbSmall",
    "http://schemas.delving.eu/nave/terms/thumbLarge",
    "http://www.europeana.eu/schemas/edm/object",
    "http://www.europeana.eu/schemas/edm/isShownBy",
]

latLong = []
dateRange = []
date = []
