// Run 'make protobuffer' from the root directory to generate 'viewconfig.pb.go'.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.20.1
// 	protoc        v3.11.4
// source: hub3/fragments/viewconfig.proto

package fragments

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DataSetType int32

const (
	DataSetType_SINGLE   DataSetType = 0
	DataSetType_MULTIPLE DataSetType = 1
	DataSetType_BYQUERY  DataSetType = 2
)

// Enum value maps for DataSetType.
var (
	DataSetType_name = map[int32]string{
		0: "SINGLE",
		1: "MULTIPLE",
		2: "BYQUERY",
	}
	DataSetType_value = map[string]int32{
		"SINGLE":   0,
		"MULTIPLE": 1,
		"BYQUERY":  2,
	}
)

func (x DataSetType) Enum() *DataSetType {
	p := new(DataSetType)
	*p = x
	return p
}

func (x DataSetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataSetType) Descriptor() protoreflect.EnumDescriptor {
	return file_hub3_fragments_viewconfig_proto_enumTypes[0].Descriptor()
}

func (DataSetType) Type() protoreflect.EnumType {
	return &file_hub3_fragments_viewconfig_proto_enumTypes[0]
}

func (x DataSetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataSetType.Descriptor instead.
func (DataSetType) EnumDescriptor() ([]byte, []int) {
	return file_hub3_fragments_viewconfig_proto_rawDescGZIP(), []int{0}
}

type ResultType int32

const (
	ResultType_GRID    ResultType = 0
	ResultType_TABLE   ResultType = 1
	ResultType_MAP     ResultType = 2
	ResultType_ARCHIVE ResultType = 3
)

// Enum value maps for ResultType.
var (
	ResultType_name = map[int32]string{
		0: "GRID",
		1: "TABLE",
		2: "MAP",
		3: "ARCHIVE",
	}
	ResultType_value = map[string]int32{
		"GRID":    0,
		"TABLE":   1,
		"MAP":     2,
		"ARCHIVE": 3,
	}
)

func (x ResultType) Enum() *ResultType {
	p := new(ResultType)
	*p = x
	return p
}

func (x ResultType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResultType) Descriptor() protoreflect.EnumDescriptor {
	return file_hub3_fragments_viewconfig_proto_enumTypes[1].Descriptor()
}

func (ResultType) Type() protoreflect.EnumType {
	return &file_hub3_fragments_viewconfig_proto_enumTypes[1]
}

func (x ResultType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResultType.Descriptor instead.
func (ResultType) EnumDescriptor() ([]byte, []int) {
	return file_hub3_fragments_viewconfig_proto_rawDescGZIP(), []int{1}
}

type FieldType int32

const (
	FieldType_LITERAL        FieldType = 0
	FieldType_RESOURCE       FieldType = 1
	FieldType_DATE           FieldType = 2
	FieldType_POINT          FieldType = 3
	FieldType_DIGITAL_OBJECT FieldType = 4
	FieldType_MANIFEST       FieldType = 5
)

// Enum value maps for FieldType.
var (
	FieldType_name = map[int32]string{
		0: "LITERAL",
		1: "RESOURCE",
		2: "DATE",
		3: "POINT",
		4: "DIGITAL_OBJECT",
		5: "MANIFEST",
	}
	FieldType_value = map[string]int32{
		"LITERAL":        0,
		"RESOURCE":       1,
		"DATE":           2,
		"POINT":          3,
		"DIGITAL_OBJECT": 4,
		"MANIFEST":       5,
	}
)

func (x FieldType) Enum() *FieldType {
	p := new(FieldType)
	*p = x
	return p
}

func (x FieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_hub3_fragments_viewconfig_proto_enumTypes[2].Descriptor()
}

func (FieldType) Type() protoreflect.EnumType {
	return &file_hub3_fragments_viewconfig_proto_enumTypes[2]
}

func (x FieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldType.Descriptor instead.
func (FieldType) EnumDescriptor() ([]byte, []int) {
	return file_hub3_fragments_viewconfig_proto_rawDescGZIP(), []int{2}
}

type InlineType int32

const (
	InlineType_NONE                InlineType = 0
	InlineType_URI_ONLY            InlineType = 4 // show row object resource URI
	InlineType_LABEL               InlineType = 1
	InlineType_MODAL               InlineType = 2
	InlineType_INLINE_DETAIL_BLOCK InlineType = 3
)

// Enum value maps for InlineType.
var (
	InlineType_name = map[int32]string{
		0: "NONE",
		4: "URI_ONLY",
		1: "LABEL",
		2: "MODAL",
		3: "INLINE_DETAIL_BLOCK",
	}
	InlineType_value = map[string]int32{
		"NONE":                0,
		"URI_ONLY":            4,
		"LABEL":               1,
		"MODAL":               2,
		"INLINE_DETAIL_BLOCK": 3,
	}
)

func (x InlineType) Enum() *InlineType {
	p := new(InlineType)
	*p = x
	return p
}

func (x InlineType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InlineType) Descriptor() protoreflect.EnumDescriptor {
	return file_hub3_fragments_viewconfig_proto_enumTypes[3].Descriptor()
}

func (InlineType) Type() protoreflect.EnumType {
	return &file_hub3_fragments_viewconfig_proto_enumTypes[3]
}

func (x InlineType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InlineType.Descriptor instead.
func (InlineType) EnumDescriptor() ([]byte, []int) {
	return file_hub3_fragments_viewconfig_proto_rawDescGZIP(), []int{3}
}

type DataSetConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           string            `protobuf:"bytes,11,opt,name=ID,proto3" json:"ID,omitempty"`
	Title        string            `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Markdown     string            `protobuf:"bytes,2,opt,name=markdown,proto3" json:"markdown,omitempty"`
	DataSetType  DataSetType       `protobuf:"varint,3,opt,name=dataSetType,proto3,enum=fragments.DataSetType" json:"dataSetType,omitempty"`
	Facets       []*FacetField     `protobuf:"bytes,4,rep,name=facets,proto3" json:"facets,omitempty"`
	Spec         []string          `protobuf:"bytes,5,rep,name=spec,proto3" json:"spec,omitempty"`
	ExcludeSpec  []string          `protobuf:"bytes,10,rep,name=excludeSpec,proto3" json:"excludeSpec,omitempty"`
	ViewConfig   *DetailViewConfig `protobuf:"bytes,6,opt,name=viewConfig,proto3" json:"viewConfig,omitempty"`
	ResultConfig *ResultViewConfig `protobuf:"bytes,7,opt,name=resultConfig,proto3" json:"resultConfig,omitempty"`
	Filter       *DataSetFilter    `protobuf:"bytes,8,opt,name=filter,proto3" json:"filter,omitempty"`
	OrgID        string            `protobuf:"bytes,9,opt,name=orgID,proto3" json:"orgID,omitempty"`
}

func (x *DataSetConfig) Reset() {
	*x = DataSetConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub3_fragments_viewconfig_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSetConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSetConfig) ProtoMessage() {}

func (x *DataSetConfig) ProtoReflect() protoreflect.Message {
	mi := &file_hub3_fragments_viewconfig_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSetConfig.ProtoReflect.Descriptor instead.
func (*DataSetConfig) Descriptor() ([]byte, []int) {
	return file_hub3_fragments_viewconfig_proto_rawDescGZIP(), []int{0}
}

func (x *DataSetConfig) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *DataSetConfig) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DataSetConfig) GetMarkdown() string {
	if x != nil {
		return x.Markdown
	}
	return ""
}

func (x *DataSetConfig) GetDataSetType() DataSetType {
	if x != nil {
		return x.DataSetType
	}
	return DataSetType_SINGLE
}

func (x *DataSetConfig) GetFacets() []*FacetField {
	if x != nil {
		return x.Facets
	}
	return nil
}

func (x *DataSetConfig) GetSpec() []string {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *DataSetConfig) GetExcludeSpec() []string {
	if x != nil {
		return x.ExcludeSpec
	}
	return nil
}

func (x *DataSetConfig) GetViewConfig() *DetailViewConfig {
	if x != nil {
		return x.ViewConfig
	}
	return nil
}

func (x *DataSetConfig) GetResultConfig() *ResultViewConfig {
	if x != nil {
		return x.ResultConfig
	}
	return nil
}

func (x *DataSetConfig) GetFilter() *DataSetFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *DataSetConfig) GetOrgID() string {
	if x != nil {
		return x.OrgID
	}
	return ""
}

type DataSetFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryFilter []*QueryFilter `protobuf:"bytes,1,rep,name=queryFilter,proto3" json:"queryFilter,omitempty"`
	Query       string         `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *DataSetFilter) Reset() {
	*x = DataSetFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub3_fragments_viewconfig_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSetFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSetFilter) ProtoMessage() {}

func (x *DataSetFilter) ProtoReflect() protoreflect.Message {
	mi := &file_hub3_fragments_viewconfig_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSetFilter.ProtoReflect.Descriptor instead.
func (*DataSetFilter) Descriptor() ([]byte, []int) {
	return file_hub3_fragments_viewconfig_proto_rawDescGZIP(), []int{1}
}

func (x *DataSetFilter) GetQueryFilter() []*QueryFilter {
	if x != nil {
		return x.QueryFilter
	}
	return nil
}

func (x *DataSetFilter) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type ResultViewConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResultType ResultType         `protobuf:"varint,1,opt,name=resultType,proto3,enum=fragments.ResultType" json:"resultType,omitempty"`
	Fields     *PresentationField `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	Inline     bool               `protobuf:"varint,3,opt,name=inline,proto3" json:"inline,omitempty"`
}

func (x *ResultViewConfig) Reset() {
	*x = ResultViewConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub3_fragments_viewconfig_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultViewConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultViewConfig) ProtoMessage() {}

func (x *ResultViewConfig) ProtoReflect() protoreflect.Message {
	mi := &file_hub3_fragments_viewconfig_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultViewConfig.ProtoReflect.Descriptor instead.
func (*ResultViewConfig) Descriptor() ([]byte, []int) {
	return file_hub3_fragments_viewconfig_proto_rawDescGZIP(), []int{2}
}

func (x *ResultViewConfig) GetResultType() ResultType {
	if x != nil {
		return x.ResultType
	}
	return ResultType_GRID
}

func (x *ResultViewConfig) GetFields() *PresentationField {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ResultViewConfig) GetInline() bool {
	if x != nil {
		return x.Inline
	}
	return false
}

type PresentationField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	I18NLabel  *I18NLabel `protobuf:"bytes,1,opt,name=i18nLabel,proto3" json:"i18nLabel,omitempty"`
	Clickable  bool       `protobuf:"varint,2,opt,name=clickable,proto3" json:"clickable,omitempty"`
	Searchable bool       `protobuf:"varint,7,opt,name=searchable,proto3" json:"searchable,omitempty"`
	Predicate  string     `protobuf:"bytes,3,opt,name=predicate,proto3" json:"predicate,omitempty"`
	Single     bool       `protobuf:"varint,4,opt,name=single,proto3" json:"single,omitempty"`
	Order      int32      `protobuf:"varint,5,opt,name=order,proto3" json:"order,omitempty"`
	FieldType  FieldType  `protobuf:"varint,6,opt,name=fieldType,proto3,enum=fragments.FieldType" json:"fieldType,omitempty"`
	InlineType InlineType `protobuf:"varint,8,opt,name=inlineType,proto3,enum=fragments.InlineType" json:"inlineType,omitempty"`
	InlineCSS  string     `protobuf:"bytes,9,opt,name=inlineCSS,proto3" json:"inlineCSS,omitempty"`
}

func (x *PresentationField) Reset() {
	*x = PresentationField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub3_fragments_viewconfig_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresentationField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresentationField) ProtoMessage() {}

func (x *PresentationField) ProtoReflect() protoreflect.Message {
	mi := &file_hub3_fragments_viewconfig_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresentationField.ProtoReflect.Descriptor instead.
func (*PresentationField) Descriptor() ([]byte, []int) {
	return file_hub3_fragments_viewconfig_proto_rawDescGZIP(), []int{3}
}

func (x *PresentationField) GetI18NLabel() *I18NLabel {
	if x != nil {
		return x.I18NLabel
	}
	return nil
}

func (x *PresentationField) GetClickable() bool {
	if x != nil {
		return x.Clickable
	}
	return false
}

func (x *PresentationField) GetSearchable() bool {
	if x != nil {
		return x.Searchable
	}
	return false
}

func (x *PresentationField) GetPredicate() string {
	if x != nil {
		return x.Predicate
	}
	return ""
}

func (x *PresentationField) GetSingle() bool {
	if x != nil {
		return x.Single
	}
	return false
}

func (x *PresentationField) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *PresentationField) GetFieldType() FieldType {
	if x != nil {
		return x.FieldType
	}
	return FieldType_LITERAL
}

func (x *PresentationField) GetInlineType() InlineType {
	if x != nil {
		return x.InlineType
	}
	return InlineType_NONE
}

func (x *PresentationField) GetInlineCSS() string {
	if x != nil {
		return x.InlineCSS
	}
	return ""
}

type DetailViewConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks    []*DetailBlock `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	EntryType string         `protobuf:"bytes,2,opt,name=entryType,proto3" json:"entryType,omitempty"`
}

func (x *DetailViewConfig) Reset() {
	*x = DetailViewConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub3_fragments_viewconfig_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailViewConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailViewConfig) ProtoMessage() {}

func (x *DetailViewConfig) ProtoReflect() protoreflect.Message {
	mi := &file_hub3_fragments_viewconfig_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailViewConfig.ProtoReflect.Descriptor instead.
func (*DetailViewConfig) Descriptor() ([]byte, []int) {
	return file_hub3_fragments_viewconfig_proto_rawDescGZIP(), []int{4}
}

func (x *DetailViewConfig) GetBlocks() []*DetailBlock {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *DetailViewConfig) GetEntryType() string {
	if x != nil {
		return x.EntryType
	}
	return ""
}

type I18NLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang string `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *I18NLabel) Reset() {
	*x = I18NLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub3_fragments_viewconfig_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *I18NLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*I18NLabel) ProtoMessage() {}

func (x *I18NLabel) ProtoReflect() protoreflect.Message {
	mi := &file_hub3_fragments_viewconfig_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use I18NLabel.ProtoReflect.Descriptor instead.
func (*I18NLabel) Descriptor() ([]byte, []int) {
	return file_hub3_fragments_viewconfig_proto_rawDescGZIP(), []int{5}
}

func (x *I18NLabel) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *I18NLabel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DetailBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	I18NLabel     *I18NLabel           `protobuf:"bytes,1,opt,name=i18nLabel,proto3" json:"i18nLabel,omitempty"`
	ResourceLabel string               `protobuf:"bytes,2,opt,name=resourceLabel,proto3" json:"resourceLabel,omitempty"` // label of link
	Order         int32                `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	ResourceType  string               `protobuf:"bytes,4,opt,name=resourceType,proto3" json:"resourceType,omitempty"`
	Fields        []*PresentationField `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
	InlineCSS     string               `protobuf:"bytes,6,opt,name=inlineCSS,proto3" json:"inlineCSS,omitempty"`
}

func (x *DetailBlock) Reset() {
	*x = DetailBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub3_fragments_viewconfig_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailBlock) ProtoMessage() {}

func (x *DetailBlock) ProtoReflect() protoreflect.Message {
	mi := &file_hub3_fragments_viewconfig_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailBlock.ProtoReflect.Descriptor instead.
func (*DetailBlock) Descriptor() ([]byte, []int) {
	return file_hub3_fragments_viewconfig_proto_rawDescGZIP(), []int{6}
}

func (x *DetailBlock) GetI18NLabel() *I18NLabel {
	if x != nil {
		return x.I18NLabel
	}
	return nil
}

func (x *DetailBlock) GetResourceLabel() string {
	if x != nil {
		return x.ResourceLabel
	}
	return ""
}

func (x *DetailBlock) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *DetailBlock) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *DetailBlock) GetFields() []*PresentationField {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *DetailBlock) GetInlineCSS() string {
	if x != nil {
		return x.InlineCSS
	}
	return ""
}

var File_hub3_fragments_viewconfig_proto protoreflect.FileDescriptor

var file_hub3_fragments_viewconfig_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x68, 0x75, 0x62, 0x33, 0x2f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x76, 0x69, 0x65, 0x77, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x18, 0x68, 0x75,
	0x62, 0x33, 0x2f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x03, 0x0a, 0x0d, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x65, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x46, 0x61, 0x63, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x61, 0x63,
	0x65, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x3b, 0x0a, 0x0a, 0x76, 0x69, 0x65,
	0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x77,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3f, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66,
	0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56,
	0x69, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67,
	0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x44, 0x22,
	0x5f, 0x0a, 0x0d, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x38, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x22, 0x97, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x65, 0x77, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x35, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x66, 0x72, 0x61, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66,
	0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0xda, 0x02, 0x0a, 0x11, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x32, 0x0a, 0x09, 0x69, 0x31, 0x38, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x49, 0x31, 0x38, 0x4e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x09, 0x69, 0x31, 0x38, 0x6e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x32,
	0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x69,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x43, 0x53, 0x53, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x43, 0x53, 0x53, 0x22, 0x60, 0x0a, 0x10, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2e, 0x0a, 0x06, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x72,
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x33, 0x0a, 0x09, 0x49, 0x31, 0x38,
	0x4e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xf5,
	0x01, 0x0a, 0x0b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x32,
	0x0a, 0x09, 0x69, 0x31, 0x38, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x49, 0x31,
	0x38, 0x4e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x09, 0x69, 0x31, 0x38, 0x6e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x43, 0x53, 0x53, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x43, 0x53, 0x53, 0x2a, 0x34, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x50, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x42, 0x59, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0x02, 0x2a, 0x37, 0x0a, 0x0a,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x52,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x07, 0x0a, 0x03, 0x4d, 0x41, 0x50, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x52, 0x43, 0x48,
	0x49, 0x56, 0x45, 0x10, 0x03, 0x2a, 0x5d, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x49, 0x54, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x4f, 0x49, 0x4e, 0x54,
	0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x49, 0x47, 0x49, 0x54, 0x41, 0x4c, 0x5f, 0x4f, 0x42,
	0x4a, 0x45, 0x43, 0x54, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x41, 0x4e, 0x49, 0x46, 0x45,
	0x53, 0x54, 0x10, 0x05, 0x2a, 0x53, 0x0a, 0x0a, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x55, 0x52, 0x49, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x41,
	0x42, 0x45, 0x4c, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4f, 0x44, 0x41, 0x4c, 0x10, 0x02,
	0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49,
	0x4c, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x03, 0x42, 0x10, 0x5a, 0x0e, 0x68, 0x75, 0x62,
	0x33, 0x2f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_hub3_fragments_viewconfig_proto_rawDescOnce sync.Once
	file_hub3_fragments_viewconfig_proto_rawDescData = file_hub3_fragments_viewconfig_proto_rawDesc
)

func file_hub3_fragments_viewconfig_proto_rawDescGZIP() []byte {
	file_hub3_fragments_viewconfig_proto_rawDescOnce.Do(func() {
		file_hub3_fragments_viewconfig_proto_rawDescData = protoimpl.X.CompressGZIP(file_hub3_fragments_viewconfig_proto_rawDescData)
	})
	return file_hub3_fragments_viewconfig_proto_rawDescData
}

var file_hub3_fragments_viewconfig_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_hub3_fragments_viewconfig_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_hub3_fragments_viewconfig_proto_goTypes = []interface{}{
	(DataSetType)(0),          // 0: fragments.DataSetType
	(ResultType)(0),           // 1: fragments.ResultType
	(FieldType)(0),            // 2: fragments.FieldType
	(InlineType)(0),           // 3: fragments.InlineType
	(*DataSetConfig)(nil),     // 4: fragments.DataSetConfig
	(*DataSetFilter)(nil),     // 5: fragments.DataSetFilter
	(*ResultViewConfig)(nil),  // 6: fragments.ResultViewConfig
	(*PresentationField)(nil), // 7: fragments.PresentationField
	(*DetailViewConfig)(nil),  // 8: fragments.DetailViewConfig
	(*I18NLabel)(nil),         // 9: fragments.I18NLabel
	(*DetailBlock)(nil),       // 10: fragments.DetailBlock
	(*FacetField)(nil),        // 11: fragments.FacetField
	(*QueryFilter)(nil),       // 12: fragments.QueryFilter
}
var file_hub3_fragments_viewconfig_proto_depIdxs = []int32{
	0,  // 0: fragments.DataSetConfig.dataSetType:type_name -> fragments.DataSetType
	11, // 1: fragments.DataSetConfig.facets:type_name -> fragments.FacetField
	8,  // 2: fragments.DataSetConfig.viewConfig:type_name -> fragments.DetailViewConfig
	6,  // 3: fragments.DataSetConfig.resultConfig:type_name -> fragments.ResultViewConfig
	5,  // 4: fragments.DataSetConfig.filter:type_name -> fragments.DataSetFilter
	12, // 5: fragments.DataSetFilter.queryFilter:type_name -> fragments.QueryFilter
	1,  // 6: fragments.ResultViewConfig.resultType:type_name -> fragments.ResultType
	7,  // 7: fragments.ResultViewConfig.fields:type_name -> fragments.PresentationField
	9,  // 8: fragments.PresentationField.i18nLabel:type_name -> fragments.I18NLabel
	2,  // 9: fragments.PresentationField.fieldType:type_name -> fragments.FieldType
	3,  // 10: fragments.PresentationField.inlineType:type_name -> fragments.InlineType
	10, // 11: fragments.DetailViewConfig.blocks:type_name -> fragments.DetailBlock
	9,  // 12: fragments.DetailBlock.i18nLabel:type_name -> fragments.I18NLabel
	7,  // 13: fragments.DetailBlock.fields:type_name -> fragments.PresentationField
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_hub3_fragments_viewconfig_proto_init() }
func file_hub3_fragments_viewconfig_proto_init() {
	if File_hub3_fragments_viewconfig_proto != nil {
		return
	}
	file_hub3_fragments_api_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_hub3_fragments_viewconfig_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSetConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub3_fragments_viewconfig_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSetFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub3_fragments_viewconfig_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultViewConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub3_fragments_viewconfig_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PresentationField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub3_fragments_viewconfig_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailViewConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub3_fragments_viewconfig_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*I18NLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub3_fragments_viewconfig_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hub3_fragments_viewconfig_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hub3_fragments_viewconfig_proto_goTypes,
		DependencyIndexes: file_hub3_fragments_viewconfig_proto_depIdxs,
		EnumInfos:         file_hub3_fragments_viewconfig_proto_enumTypes,
		MessageInfos:      file_hub3_fragments_viewconfig_proto_msgTypes,
	}.Build()
	File_hub3_fragments_viewconfig_proto = out.File
	file_hub3_fragments_viewconfig_proto_rawDesc = nil
	file_hub3_fragments_viewconfig_proto_goTypes = nil
	file_hub3_fragments_viewconfig_proto_depIdxs = nil
}
