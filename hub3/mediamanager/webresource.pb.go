// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hub3/mediamanager/webresource.proto

package mediamanager

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DownloadType int32

const (
	DownloadType_Thumbnail DownloadType = 0
	DownloadType_DeepZoom  DownloadType = 1
	DownloadType_Source    DownloadType = 2
	DownloadType_RDF       DownloadType = 3
	DownloadType_JSON      DownloadType = 4
)

var DownloadType_name = map[int32]string{
	0: "Thumbnail",
	1: "DeepZoom",
	2: "Source",
	3: "RDF",
	4: "JSON",
}
var DownloadType_value = map[string]int32{
	"Thumbnail": 0,
	"DeepZoom":  1,
	"Source":    2,
	"RDF":       3,
	"JSON":      4,
}

func (x DownloadType) String() string {
	return proto.EnumName(DownloadType_name, int32(x))
}
func (DownloadType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_webresource_5ae2a1b762f54da0, []int{0}
}

type WebResourceRequest struct {
	OrgID                string   `protobuf:"bytes,1,opt,name=orgID" json:"orgID,omitempty"`
	Spec                 string   `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	HubID                string   `protobuf:"bytes,3,opt,name=hubID" json:"hubID,omitempty"`
	MimeType             string   `protobuf:"bytes,4,opt,name=mimeType" json:"mimeType,omitempty"`
	SourcePath           string   `protobuf:"bytes,5,opt,name=sourcePath" json:"sourcePath,omitempty"`
	DownloadType         string   `protobuf:"bytes,6,opt,name=DownloadType" json:"DownloadType,omitempty"`
	Dimension            string   `protobuf:"bytes,7,opt,name=dimension" json:"dimension,omitempty"`
	Urn                  string   `protobuf:"bytes,8,opt,name=urn" json:"urn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebResourceRequest) Reset()         { *m = WebResourceRequest{} }
func (m *WebResourceRequest) String() string { return proto.CompactTextString(m) }
func (*WebResourceRequest) ProtoMessage()    {}
func (*WebResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_webresource_5ae2a1b762f54da0, []int{0}
}
func (m *WebResourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebResourceRequest.Unmarshal(m, b)
}
func (m *WebResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebResourceRequest.Marshal(b, m, deterministic)
}
func (dst *WebResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebResourceRequest.Merge(dst, src)
}
func (m *WebResourceRequest) XXX_Size() int {
	return xxx_messageInfo_WebResourceRequest.Size(m)
}
func (m *WebResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WebResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WebResourceRequest proto.InternalMessageInfo

func (m *WebResourceRequest) GetOrgID() string {
	if m != nil {
		return m.OrgID
	}
	return ""
}

func (m *WebResourceRequest) GetSpec() string {
	if m != nil {
		return m.Spec
	}
	return ""
}

func (m *WebResourceRequest) GetHubID() string {
	if m != nil {
		return m.HubID
	}
	return ""
}

func (m *WebResourceRequest) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *WebResourceRequest) GetSourcePath() string {
	if m != nil {
		return m.SourcePath
	}
	return ""
}

func (m *WebResourceRequest) GetDownloadType() string {
	if m != nil {
		return m.DownloadType
	}
	return ""
}

func (m *WebResourceRequest) GetDimension() string {
	if m != nil {
		return m.Dimension
	}
	return ""
}

func (m *WebResourceRequest) GetUrn() string {
	if m != nil {
		return m.Urn
	}
	return ""
}

type WebResource struct {
	OrgID                string               `protobuf:"bytes,1,opt,name=orgID" json:"orgID,omitempty"`
	Spec                 string               `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	HubID                []string             `protobuf:"bytes,3,rep,name=hubID" json:"hubID,omitempty"`
	Derivatives          map[string]string    `protobuf:"bytes,4,rep,name=derivatives" json:"derivatives,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ObjectNumber         string               `protobuf:"bytes,5,opt,name=objectNumber" json:"objectNumber,omitempty"`
	Alternatives         []string             `protobuf:"bytes,6,rep,name=alternatives" json:"alternatives,omitempty"`
	SourcePath           string               `protobuf:"bytes,7,opt,name=sourcePath" json:"sourcePath,omitempty"`
	SourceExtension      string               `protobuf:"bytes,8,opt,name=sourceExtension" json:"sourceExtension,omitempty"`
	SourceMimeType       string               `protobuf:"bytes,9,opt,name=sourceMimeType" json:"sourceMimeType,omitempty"`
	LastModified         *timestamp.Timestamp `protobuf:"bytes,10,opt,name=lastModified" json:"lastModified,omitempty"`
	SourceSize           int64                `protobuf:"varint,11,opt,name=sourceSize" json:"sourceSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WebResource) Reset()         { *m = WebResource{} }
func (m *WebResource) String() string { return proto.CompactTextString(m) }
func (*WebResource) ProtoMessage()    {}
func (*WebResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_webresource_5ae2a1b762f54da0, []int{1}
}
func (m *WebResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebResource.Unmarshal(m, b)
}
func (m *WebResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebResource.Marshal(b, m, deterministic)
}
func (dst *WebResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebResource.Merge(dst, src)
}
func (m *WebResource) XXX_Size() int {
	return xxx_messageInfo_WebResource.Size(m)
}
func (m *WebResource) XXX_DiscardUnknown() {
	xxx_messageInfo_WebResource.DiscardUnknown(m)
}

var xxx_messageInfo_WebResource proto.InternalMessageInfo

func (m *WebResource) GetOrgID() string {
	if m != nil {
		return m.OrgID
	}
	return ""
}

func (m *WebResource) GetSpec() string {
	if m != nil {
		return m.Spec
	}
	return ""
}

func (m *WebResource) GetHubID() []string {
	if m != nil {
		return m.HubID
	}
	return nil
}

func (m *WebResource) GetDerivatives() map[string]string {
	if m != nil {
		return m.Derivatives
	}
	return nil
}

func (m *WebResource) GetObjectNumber() string {
	if m != nil {
		return m.ObjectNumber
	}
	return ""
}

func (m *WebResource) GetAlternatives() []string {
	if m != nil {
		return m.Alternatives
	}
	return nil
}

func (m *WebResource) GetSourcePath() string {
	if m != nil {
		return m.SourcePath
	}
	return ""
}

func (m *WebResource) GetSourceExtension() string {
	if m != nil {
		return m.SourceExtension
	}
	return ""
}

func (m *WebResource) GetSourceMimeType() string {
	if m != nil {
		return m.SourceMimeType
	}
	return ""
}

func (m *WebResource) GetLastModified() *timestamp.Timestamp {
	if m != nil {
		return m.LastModified
	}
	return nil
}

func (m *WebResource) GetSourceSize() int64 {
	if m != nil {
		return m.SourceSize
	}
	return 0
}

func init() {
	proto.RegisterType((*WebResourceRequest)(nil), "mediamanager.WebResourceRequest")
	proto.RegisterType((*WebResource)(nil), "mediamanager.WebResource")
	proto.RegisterMapType((map[string]string)(nil), "mediamanager.WebResource.DerivativesEntry")
	proto.RegisterEnum("mediamanager.DownloadType", DownloadType_name, DownloadType_value)
}

func init() {
	proto.RegisterFile("hub3/mediamanager/webresource.proto", fileDescriptor_webresource_5ae2a1b762f54da0)
}

var fileDescriptor_webresource_5ae2a1b762f54da0 = []byte{
	// 471 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x71, 0xec, 0xe6, 0xcf, 0x38, 0x80, 0xb5, 0xe2, 0xb0, 0x8a, 0x10, 0x44, 0x41, 0x42,
	0x56, 0x0f, 0x8e, 0xd4, 0x5e, 0x10, 0x87, 0x9e, 0x5c, 0xa4, 0x56, 0xb4, 0x20, 0x27, 0x12, 0x12,
	0xb7, 0x75, 0x3c, 0x4d, 0x16, 0xbc, 0x5e, 0xb3, 0x5e, 0x27, 0x84, 0xe7, 0xe5, 0x15, 0xb8, 0x23,
	0xaf, 0x1d, 0x62, 0x87, 0x5b, 0x6f, 0x33, 0xbf, 0xf9, 0xec, 0xd9, 0xf9, 0x66, 0xe0, 0xcd, 0xa6,
	0x8c, 0x2f, 0xe7, 0x02, 0x13, 0xce, 0x04, 0xcb, 0xd8, 0x1a, 0xd5, 0x7c, 0x87, 0xb1, 0xc2, 0x42,
	0x96, 0x6a, 0x85, 0x41, 0xae, 0xa4, 0x96, 0x64, 0xdc, 0xae, 0x4f, 0x5e, 0xaf, 0xa5, 0x5c, 0xa7,
	0x38, 0x37, 0xb5, 0xb8, 0x7c, 0x98, 0x6b, 0x2e, 0xb0, 0xd0, 0x4c, 0xe4, 0xb5, 0x7c, 0xf6, 0xdb,
	0x02, 0xf2, 0x05, 0xe3, 0xa8, 0xf9, 0x49, 0x84, 0x3f, 0x4a, 0x2c, 0x34, 0x79, 0x01, 0x67, 0x52,
	0xad, 0x6f, 0x42, 0x6a, 0x4d, 0x2d, 0x7f, 0x14, 0xd5, 0x09, 0x21, 0xe0, 0x14, 0x39, 0xae, 0x68,
	0xcf, 0x40, 0x13, 0x57, 0xca, 0x4d, 0x19, 0xdf, 0x84, 0xd4, 0xae, 0x95, 0x26, 0x21, 0x13, 0x18,
	0x0a, 0x2e, 0x70, 0xb9, 0xcf, 0x91, 0x3a, 0xa6, 0xf0, 0x2f, 0x27, 0xaf, 0x00, 0xea, 0x66, 0x9f,
	0x99, 0xde, 0xd0, 0x33, 0x53, 0x6d, 0x11, 0x32, 0x83, 0x71, 0x28, 0x77, 0x59, 0x2a, 0x59, 0x62,
	0xbe, 0xef, 0x1b, 0x45, 0x87, 0x91, 0x97, 0x30, 0x4a, 0xb8, 0xc0, 0xac, 0xe0, 0x32, 0xa3, 0x03,
	0x23, 0x38, 0x02, 0xe2, 0x81, 0x5d, 0xaa, 0x8c, 0x0e, 0x0d, 0xaf, 0xc2, 0xd9, 0x1f, 0x1b, 0xdc,
	0xd6, 0x98, 0x8f, 0x9b, 0xcf, 0x3e, 0xce, 0xf7, 0x11, 0xdc, 0x04, 0x15, 0xdf, 0x32, 0xcd, 0xb7,
	0x58, 0x50, 0x67, 0x6a, 0xfb, 0xee, 0xc5, 0x79, 0xd0, 0xf6, 0x3e, 0x68, 0xf5, 0x0b, 0xc2, 0xa3,
	0xf8, 0x3a, 0xd3, 0x6a, 0x1f, 0xb5, 0x3f, 0xaf, 0x26, 0x96, 0xf1, 0x37, 0x5c, 0xe9, 0xfb, 0x52,
	0xc4, 0xa8, 0x1a, 0x4f, 0x3a, 0xac, 0xd2, 0xb0, 0x54, 0xa3, 0xca, 0x9a, 0x96, 0x7d, 0xf3, 0x9c,
	0x0e, 0x3b, 0x71, 0x76, 0xf0, 0x9f, 0xb3, 0x3e, 0x3c, 0xaf, 0xb3, 0xeb, 0x9f, 0xba, 0xf1, 0xae,
	0xf6, 0xe8, 0x14, 0x93, 0xb7, 0xf0, 0xac, 0x46, 0x77, 0x87, 0x2d, 0x8e, 0x8c, 0xf0, 0x84, 0x92,
	0x2b, 0x18, 0xa7, 0xac, 0xd0, 0x77, 0x32, 0xe1, 0x0f, 0x1c, 0x13, 0x0a, 0x53, 0xcb, 0x77, 0x2f,
	0x26, 0x41, 0x7d, 0x76, 0xc1, 0xe1, 0xec, 0x82, 0xe5, 0xe1, 0xec, 0xa2, 0x8e, 0xfe, 0xf8, 0xe2,
	0x05, 0xff, 0x85, 0xd4, 0x9d, 0x5a, 0xbe, 0x1d, 0xb5, 0xc8, 0xe4, 0x0a, 0xbc, 0x53, 0xeb, 0xaa,
	0xed, 0x7e, 0xc7, 0x7d, 0xb3, 0xb9, 0x2a, 0xac, 0x76, 0xb4, 0x65, 0x69, 0x89, 0xcd, 0xe2, 0xea,
	0xe4, 0x7d, 0xef, 0x9d, 0x75, 0x7e, 0xdb, 0xbd, 0x25, 0xf2, 0x14, 0x46, 0xcb, 0x4d, 0x29, 0xe2,
	0x8c, 0xf1, 0xd4, 0x7b, 0x42, 0xc6, 0x30, 0x0c, 0x11, 0xf3, 0xaf, 0x52, 0x0a, 0xcf, 0x22, 0x00,
	0xfd, 0x85, 0x69, 0xed, 0xf5, 0xc8, 0x00, 0xec, 0x28, 0xfc, 0xe0, 0xd9, 0x64, 0x08, 0xce, 0xed,
	0xe2, 0xd3, 0xbd, 0xe7, 0xc4, 0x7d, 0x33, 0xcd, 0xe5, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbd,
	0x7f, 0x42, 0x7f, 0x87, 0x03, 0x00, 0x00,
}
