// Copyright 2017 Delving B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.20.1
// 	protoc        v3.11.4
// source: hub3/mediamanager/webresource.proto

package mediamanager

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DownloadType int32

const (
	DownloadType_Thumbnail DownloadType = 0
	DownloadType_DeepZoom  DownloadType = 1
	DownloadType_Source    DownloadType = 2
	DownloadType_RDF       DownloadType = 3
	DownloadType_JSON      DownloadType = 4
)

// Enum value maps for DownloadType.
var (
	DownloadType_name = map[int32]string{
		0: "Thumbnail",
		1: "DeepZoom",
		2: "Source",
		3: "RDF",
		4: "JSON",
	}
	DownloadType_value = map[string]int32{
		"Thumbnail": 0,
		"DeepZoom":  1,
		"Source":    2,
		"RDF":       3,
		"JSON":      4,
	}
)

func (x DownloadType) Enum() *DownloadType {
	p := new(DownloadType)
	*p = x
	return p
}

func (x DownloadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadType) Descriptor() protoreflect.EnumDescriptor {
	return file_hub3_mediamanager_webresource_proto_enumTypes[0].Descriptor()
}

func (DownloadType) Type() protoreflect.EnumType {
	return &file_hub3_mediamanager_webresource_proto_enumTypes[0]
}

func (x DownloadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadType.Descriptor instead.
func (DownloadType) EnumDescriptor() ([]byte, []int) {
	return file_hub3_mediamanager_webresource_proto_rawDescGZIP(), []int{0}
}

type WebResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgID        string `protobuf:"bytes,1,opt,name=orgID,proto3" json:"orgID,omitempty"`
	Spec         string `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	HubID        string `protobuf:"bytes,3,opt,name=hubID,proto3" json:"hubID,omitempty"`
	MimeType     string `protobuf:"bytes,4,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	SourcePath   string `protobuf:"bytes,5,opt,name=sourcePath,proto3" json:"sourcePath,omitempty"`
	DownloadType string `protobuf:"bytes,6,opt,name=DownloadType,proto3" json:"DownloadType,omitempty"`
	Dimension    string `protobuf:"bytes,7,opt,name=dimension,proto3" json:"dimension,omitempty"` // 200 200x200 x100 in the case of DownloadType Thumbnail
	Urn          string `protobuf:"bytes,8,opt,name=urn,proto3" json:"urn,omitempty"`
}

func (x *WebResourceRequest) Reset() {
	*x = WebResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub3_mediamanager_webresource_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebResourceRequest) ProtoMessage() {}

func (x *WebResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hub3_mediamanager_webresource_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebResourceRequest.ProtoReflect.Descriptor instead.
func (*WebResourceRequest) Descriptor() ([]byte, []int) {
	return file_hub3_mediamanager_webresource_proto_rawDescGZIP(), []int{0}
}

func (x *WebResourceRequest) GetOrgID() string {
	if x != nil {
		return x.OrgID
	}
	return ""
}

func (x *WebResourceRequest) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

func (x *WebResourceRequest) GetHubID() string {
	if x != nil {
		return x.HubID
	}
	return ""
}

func (x *WebResourceRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *WebResourceRequest) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *WebResourceRequest) GetDownloadType() string {
	if x != nil {
		return x.DownloadType
	}
	return ""
}

func (x *WebResourceRequest) GetDimension() string {
	if x != nil {
		return x.Dimension
	}
	return ""
}

func (x *WebResourceRequest) GetUrn() string {
	if x != nil {
		return x.Urn
	}
	return ""
}

type WebResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgID           string               `protobuf:"bytes,1,opt,name=orgID,proto3" json:"orgID,omitempty"`
	Spec            string               `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	HubID           []string             `protobuf:"bytes,3,rep,name=hubID,proto3" json:"hubID,omitempty"`
	Derivatives     map[string]string    `protobuf:"bytes,4,rep,name=derivatives,proto3" json:"derivatives,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ObjectNumber    string               `protobuf:"bytes,5,opt,name=objectNumber,proto3" json:"objectNumber,omitempty"`
	Alternatives    []string             `protobuf:"bytes,6,rep,name=alternatives,proto3" json:"alternatives,omitempty"`
	SourcePath      string               `protobuf:"bytes,7,opt,name=sourcePath,proto3" json:"sourcePath,omitempty"`
	SourceExtension string               `protobuf:"bytes,8,opt,name=sourceExtension,proto3" json:"sourceExtension,omitempty"`
	SourceMimeType  string               `protobuf:"bytes,9,opt,name=sourceMimeType,proto3" json:"sourceMimeType,omitempty"`
	LastModified    *timestamp.Timestamp `protobuf:"bytes,10,opt,name=lastModified,proto3" json:"lastModified,omitempty"`
	SourceSize      int64                `protobuf:"varint,11,opt,name=sourceSize,proto3" json:"sourceSize,omitempty"`
}

func (x *WebResource) Reset() {
	*x = WebResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub3_mediamanager_webresource_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebResource) ProtoMessage() {}

func (x *WebResource) ProtoReflect() protoreflect.Message {
	mi := &file_hub3_mediamanager_webresource_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebResource.ProtoReflect.Descriptor instead.
func (*WebResource) Descriptor() ([]byte, []int) {
	return file_hub3_mediamanager_webresource_proto_rawDescGZIP(), []int{1}
}

func (x *WebResource) GetOrgID() string {
	if x != nil {
		return x.OrgID
	}
	return ""
}

func (x *WebResource) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

func (x *WebResource) GetHubID() []string {
	if x != nil {
		return x.HubID
	}
	return nil
}

func (x *WebResource) GetDerivatives() map[string]string {
	if x != nil {
		return x.Derivatives
	}
	return nil
}

func (x *WebResource) GetObjectNumber() string {
	if x != nil {
		return x.ObjectNumber
	}
	return ""
}

func (x *WebResource) GetAlternatives() []string {
	if x != nil {
		return x.Alternatives
	}
	return nil
}

func (x *WebResource) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *WebResource) GetSourceExtension() string {
	if x != nil {
		return x.SourceExtension
	}
	return ""
}

func (x *WebResource) GetSourceMimeType() string {
	if x != nil {
		return x.SourceMimeType
	}
	return ""
}

func (x *WebResource) GetLastModified() *timestamp.Timestamp {
	if x != nil {
		return x.LastModified
	}
	return nil
}

func (x *WebResource) GetSourceSize() int64 {
	if x != nil {
		return x.SourceSize
	}
	return 0
}

var File_hub3_mediamanager_webresource_proto protoreflect.FileDescriptor

var file_hub3_mediamanager_webresource_proto_rawDesc = []byte{
	0x0a, 0x23, 0x68, 0x75, 0x62, 0x33, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2f, 0x77, 0x65, 0x62, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe4, 0x01, 0x0a, 0x12, 0x57, 0x65, 0x62, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x75, 0x62, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x68, 0x75, 0x62, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6e, 0x22, 0xf5, 0x03, 0x0a, 0x0b,
	0x57, 0x65, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x75, 0x62, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x68, 0x75, 0x62, 0x49, 0x44, 0x12, 0x4c, 0x0a, 0x0b, 0x64,
	0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x57, 0x65, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x64, 0x65,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x69, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x1a, 0x3e, 0x0a, 0x10, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x2a, 0x4a, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x65, 0x65, 0x70, 0x5a, 0x6f, 0x6f, 0x6d, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03,
	0x52, 0x44, 0x46, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x04, 0x42,
	0x13, 0x5a, 0x11, 0x68, 0x75, 0x62, 0x33, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hub3_mediamanager_webresource_proto_rawDescOnce sync.Once
	file_hub3_mediamanager_webresource_proto_rawDescData = file_hub3_mediamanager_webresource_proto_rawDesc
)

func file_hub3_mediamanager_webresource_proto_rawDescGZIP() []byte {
	file_hub3_mediamanager_webresource_proto_rawDescOnce.Do(func() {
		file_hub3_mediamanager_webresource_proto_rawDescData = protoimpl.X.CompressGZIP(file_hub3_mediamanager_webresource_proto_rawDescData)
	})
	return file_hub3_mediamanager_webresource_proto_rawDescData
}

var file_hub3_mediamanager_webresource_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_hub3_mediamanager_webresource_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_hub3_mediamanager_webresource_proto_goTypes = []interface{}{
	(DownloadType)(0),           // 0: mediamanager.DownloadType
	(*WebResourceRequest)(nil),  // 1: mediamanager.WebResourceRequest
	(*WebResource)(nil),         // 2: mediamanager.WebResource
	nil,                         // 3: mediamanager.WebResource.DerivativesEntry
	(*timestamp.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_hub3_mediamanager_webresource_proto_depIdxs = []int32{
	3, // 0: mediamanager.WebResource.derivatives:type_name -> mediamanager.WebResource.DerivativesEntry
	4, // 1: mediamanager.WebResource.lastModified:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_hub3_mediamanager_webresource_proto_init() }
func file_hub3_mediamanager_webresource_proto_init() {
	if File_hub3_mediamanager_webresource_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hub3_mediamanager_webresource_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hub3_mediamanager_webresource_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hub3_mediamanager_webresource_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hub3_mediamanager_webresource_proto_goTypes,
		DependencyIndexes: file_hub3_mediamanager_webresource_proto_depIdxs,
		EnumInfos:         file_hub3_mediamanager_webresource_proto_enumTypes,
		MessageInfos:      file_hub3_mediamanager_webresource_proto_msgTypes,
	}.Build()
	File_hub3_mediamanager_webresource_proto = out.File
	file_hub3_mediamanager_webresource_proto_rawDesc = nil
	file_hub3_mediamanager_webresource_proto_goTypes = nil
	file_hub3_mediamanager_webresource_proto_depIdxs = nil
}
