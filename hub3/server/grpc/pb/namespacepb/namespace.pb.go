// Code generated by protoc-gen-go. DO NOT EDIT.
// source: namespace.proto

package namespacepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// SearchLabelRequest message containing the URI to be turned into a searchLabel
type SearchLabelRequest struct {
	Uri                  string   `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchLabelRequest) Reset()         { *m = SearchLabelRequest{} }
func (m *SearchLabelRequest) String() string { return proto.CompactTextString(m) }
func (*SearchLabelRequest) ProtoMessage()    {}
func (*SearchLabelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecb1e126f615f5dd, []int{0}
}

func (m *SearchLabelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchLabelRequest.Unmarshal(m, b)
}
func (m *SearchLabelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchLabelRequest.Marshal(b, m, deterministic)
}
func (m *SearchLabelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchLabelRequest.Merge(m, src)
}
func (m *SearchLabelRequest) XXX_Size() int {
	return xxx_messageInfo_SearchLabelRequest.Size(m)
}
func (m *SearchLabelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchLabelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchLabelRequest proto.InternalMessageInfo

func (m *SearchLabelRequest) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

// SearchLabelResponse message contains extracted searchLabel
type SearchLabelResponse struct {
	Label                string   `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchLabelResponse) Reset()         { *m = SearchLabelResponse{} }
func (m *SearchLabelResponse) String() string { return proto.CompactTextString(m) }
func (*SearchLabelResponse) ProtoMessage()    {}
func (*SearchLabelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecb1e126f615f5dd, []int{1}
}

func (m *SearchLabelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchLabelResponse.Unmarshal(m, b)
}
func (m *SearchLabelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchLabelResponse.Marshal(b, m, deterministic)
}
func (m *SearchLabelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchLabelResponse.Merge(m, src)
}
func (m *SearchLabelResponse) XXX_Size() int {
	return xxx_messageInfo_SearchLabelResponse.Size(m)
}
func (m *SearchLabelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchLabelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchLabelResponse proto.InternalMessageInfo

func (m *SearchLabelResponse) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func init() {
	proto.RegisterType((*SearchLabelRequest)(nil), "namespacepb.SearchLabelRequest")
	proto.RegisterType((*SearchLabelResponse)(nil), "namespacepb.SearchLabelResponse")
}

func init() { proto.RegisterFile("namespace.proto", fileDescriptor_ecb1e126f615f5dd) }

var fileDescriptor_ecb1e126f615f5dd = []byte{
	// 193 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0x4b, 0xcc, 0x4d,
	0x2d, 0x2e, 0x48, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x86, 0x0b, 0x14,
	0x24, 0x49, 0xc9, 0xa4, 0xe7, 0xe7, 0xa7, 0xe7, 0xa4, 0xea, 0x27, 0x16, 0x64, 0xea, 0x27, 0xe6,
	0xe5, 0xe5, 0x97, 0x24, 0x96, 0x64, 0xe6, 0xe7, 0x15, 0x43, 0x94, 0x2a, 0xa9, 0x71, 0x09, 0x05,
	0xa7, 0x26, 0x16, 0x25, 0x67, 0xf8, 0x24, 0x26, 0xa5, 0xe6, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16,
	0x97, 0x08, 0x09, 0x70, 0x31, 0x97, 0x16, 0x65, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81,
	0x98, 0x4a, 0xda, 0x5c, 0xc2, 0x28, 0xea, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x44, 0xb8,
	0x58, 0x73, 0x40, 0x02, 0x12, 0x4c, 0x60, 0xa5, 0x10, 0x8e, 0x51, 0x03, 0x23, 0x17, 0xa7, 0x1f,
	0xcc, 0x09, 0x42, 0xc5, 0x5c, 0xdc, 0x48, 0x5a, 0x85, 0xe4, 0xf5, 0x90, 0x5c, 0xa7, 0x87, 0x69,
	0xb9, 0x94, 0x02, 0x6e, 0x05, 0x10, 0x5b, 0x95, 0x14, 0x9b, 0x2e, 0x3f, 0x99, 0xcc, 0x24, 0xad,
	0x24, 0xa6, 0x0f, 0x57, 0xa9, 0x5f, 0x0c, 0x56, 0x07, 0xb6, 0xdf, 0x8a, 0x51, 0x2b, 0x89, 0x0d,
	0xec, 0x3d, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6d, 0xaf, 0x94, 0x6f, 0x1c, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NamespaceClient is the client API for Namespace service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NamespaceClient interface {
	// Requests searchLabel for URI
	SearchLabel(ctx context.Context, in *SearchLabelRequest, opts ...grpc.CallOption) (*SearchLabelResponse, error)
}

type namespaceClient struct {
	cc *grpc.ClientConn
}

func NewNamespaceClient(cc *grpc.ClientConn) NamespaceClient {
	return &namespaceClient{cc}
}

func (c *namespaceClient) SearchLabel(ctx context.Context, in *SearchLabelRequest, opts ...grpc.CallOption) (*SearchLabelResponse, error) {
	out := new(SearchLabelResponse)
	err := c.cc.Invoke(ctx, "/namespacepb.Namespace/SearchLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NamespaceServer is the server API for Namespace service.
type NamespaceServer interface {
	// Requests searchLabel for URI
	SearchLabel(context.Context, *SearchLabelRequest) (*SearchLabelResponse, error)
}

func RegisterNamespaceServer(s *grpc.Server, srv NamespaceServer) {
	s.RegisterService(&_Namespace_serviceDesc, srv)
}

func _Namespace_SearchLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchLabelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NamespaceServer).SearchLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/namespacepb.Namespace/SearchLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NamespaceServer).SearchLabel(ctx, req.(*SearchLabelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Namespace_serviceDesc = grpc.ServiceDesc{
	ServiceName: "namespacepb.Namespace",
	HandlerType: (*NamespaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchLabel",
			Handler:    _Namespace_SearchLabel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "namespace.proto",
}
