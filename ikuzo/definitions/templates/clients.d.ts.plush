<%= for (object) in def.Objects { %>
<%= format_comment_text(object.Comment) %>interface <%= object.Name %> {
  <% let typeName = ""; %>
  <%= for (field) in object.Fields { %>
    <%= if (field.Type.JSType == "") { %><% typeName = "any" %>
    <% } else { %><% typeName = field.Type.JSType %><% } %>
    <%= if (field.Type.Multiple) { %><% typeName = typeName + "[]" %><% } %>
    <%= field.Name %> : <%= typeName %>;
  <% } %>
}
<% } %>

<%= for (service) in def.Services { %>
<%= format_comment_text(service.Comment) %>export declare class <%= service.Name %> {
	<%= for (method) in service.Methods { %>
	<%= format_comment_text(method.Comment) %>  <%= camelize_down(method.Name) %>(<%= camelize_down(method.InputObject.TypeName) %>: Partial<<%= method.InputObject.TypeName %>>) : Promise<<%= method.OutputObject.TypeName %>>
  <% } %>
}
<% } %>

export declare function getEndpoint(serviceName: string, methodName: string): () => Promise<{[key: string]: string}>;

