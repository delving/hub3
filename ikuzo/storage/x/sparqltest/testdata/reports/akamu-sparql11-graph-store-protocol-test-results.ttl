@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix earl: <http://www.w3.org/ns/earl#> .
@prefix gsp: <http://www.w3.org/2009/sparql/docs/tests/data-sparql11/http-rdf-update/manifest#> .
@prefix validator: <http://metacognition.info/gsp_validation/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:put__initial_state .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:get_of_put__initial_state .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:head_on_an_existing_graph .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:head_on_a_nonexisting_graph .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:put__graph_already_in_store .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:get_of_put__graph_already_in_store .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:put__default_graph .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:get_of_put__default_graph .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:put__mismatched_payload .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:info "expected status [201, 204], received 200 (NOOP: server doesn't support empty graphs)";
            earl:outcome earl:fail ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:put__empty_graph .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:info "expected status 200, received 404 (Implementation does not support empty graphs)";
            earl:outcome earl:fail ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:get_of_put__empty_graph .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:put__replace_empty_graph .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:get_of_replacement_for_empty_graph .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:delete__existing_graph .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:get_of_delete__existing_graph .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:delete__nonexistent_graph .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:post__existing_graph .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:get_of_post__existing_graph .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:post__multipart_formdata .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:get_of_post__multipart_formdata .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:post__create__new_graph .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:post__create__new_graph .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:get_of_post__create__new_graph .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:info "expected status 204, received 200 (NOOP: server doesn't support empty graphs)";
            earl:outcome earl:fail ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:post__empty_graph_to_existing_graph .

[] a earl:Assertion;
    earl:assertedBy validator:validator;
    earl:result [ a earl:TestResult;
            dc:date "2012-11-04"^^xsd:date;
            earl:outcome earl:pass ];
    earl:subject <http://code.google.com/p/akamu/>;
    earl:test gsp:get_of_post__after_noop .

