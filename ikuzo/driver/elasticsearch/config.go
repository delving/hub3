package elasticsearch

import (
	"errors"
	"fmt"

	"github.com/rs/zerolog"
)

var ErrConfigMissingRequiredValue = errors.New("missing required configuration value")

type Config struct {
	// urls to connect to elasticsearch cluster
	Urls []string `json:"urls"`
	// UserName is the BasicAuth username
	UserName string `json:"userName"`
	// Password is the BasicAuth password
	Password string `json:"password"`
	// Logger messages generated by the Client
	Logger *zerolog.Logger
	// Retries are maximum number of http retries
	MaxRetries int
	// Timeout is de max time in seconds before the request times out
	Timeout int
}

// Valid validates the configuration. When the Configuration is
// not valid, the Client cannot start.
func (c *Config) Valid() error {
	if len(c.Urls) == 0 {
		return fmt.Errorf("at least one URL must be supplied in Urls")
	}

	return nil
}

// DefaultConfig is the default configuration.
// It can be used to only modify your changes such as Urls or use as basis
// for an external config.
//
// Default logger is a Nop.
func DefaultConfig() *Config {
	logger := zerolog.Nop()

	return &Config{
		Urls:       []string{"http://localhost:9200"},
		UserName:   "",
		Password:   "",
		Logger:     &logger,
		MaxRetries: 3,
		Timeout:    15,
	}
}
