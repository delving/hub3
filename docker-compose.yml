version: '3'
services:
    elasticsearch1:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
        container_name: elasticsearch7
        ports:
            - '9200:9200'
            - '9300:9300'
        environment:
            - cluster.name=hub3_cluster
            - node.name=elasticsearch1
            - cluster.initial_master_nodes=elasticsearch1
            - logger.level=WARN
            - bootstrap.memory_lock=true
            - http.cors.allow-origin=http://localhost:1358,http://127.0.0.1:5601
            - http.cors.enabled=true
            - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
            - http.cors.allow-credentials=true
            - 'ES_JAVA_OPTS=-Xms1024m -Xmx1024m'
            - xpack.security.enabled=false
            - xpack.monitoring.collection.enabled=true
        volumes:
            - ~/data_no_backup/docker-data/hub3/esdata1:/usr/share/elasticsearch/data
        ulimits:
            memlock:
                soft: -1
                hard: -1
        restart: 'unless-stopped'
        # networks:
        # - esnet
    #
    kibana:
        image: docker.elastic.co/kibana/kibana:7.14.1
        container_name: kibana
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch1:9200
            - xpack.security.enabled=false
            - xpack.reporting.roles.enabled=false
        ports:
            - 5601:5601
        # networks:
        #   - es-net
        depends_on:
            - elasticsearch1
        restart: 'unless-stopped'

    fuseki:
        # image: zacanbot/fuseki
        image: stain/jena-fuseki
        container_name: hub3-fuseki
        environment:
            JVM_ARGS: -Xmx256m
            ADMIN_PASSWORD: pw123
        ports:
            - '3033:3030'
        volumes:
            - ~/data_no_backup/docker-data/hub3/fuseki/data:/data/fuseki
        command:
            [
                '/jena-fuseki/fuseki-server',
                '--set',
                'tdb:unionDefaultGraph=true',
            ]

    # TODO: remove this when nats code is removed
    nats:
        image: nats-streaming
        ports:
            - '8222:8222'
            - '4222:4222'
        command:
            - '--cluster_id'
            - 'hub3-nats'
            - '--http_port'
            - '8222'
            - '--port'
            - '4222'
            - '--max_bytes'
            - '500MB'
            - '--max_msgs'
            - '1000000'
        # networks:
        # - esnet

    postgresql:
        image: postgis/postgis:latest
        ports:
            - '5433:5432'
        environment:
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pw123}
            POSTGRES_DB: hub3
            PGDATA: /data/postgres

    redis:
        image: 'redis:alpine'

        command: redis-server --requirepass sOmE_sEcUrE_pAsS

        ports:
            - '6379:6379'

        volumes:
            - ~/data_no_backup/docker-data/hub3/redis-data:/var/lib/redis
            - $PWD/redis.conf:/usr/local/etc/redis/redis.conf

        environment:
            - REDIS_REPLICATION_MODE=master

    minio:
        image: minio/minio
        ports:
            - '9000:9000'
            - '9001:9001'
        environment:
            - MINIO_ROOT_USER=minio_admin
            - MINIO_ROOT_PASSWORD=minio_admin
            - MINIO_DEFAULT_BUCKETS=hub3-dev
        volumes:
            - ~/data_no_backup/docker-data/hub3/minio_storage:/data
        command: server  --console-address :9001 /data

# networking
networks:
    default:
        ipam:
            config:
                - subnet: 10.202.0.0/16
